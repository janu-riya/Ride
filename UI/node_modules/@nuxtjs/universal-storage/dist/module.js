'use strict';

const defu2 = require('defu');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

const defu2__default = /*#__PURE__*/_interopDefaultLegacy(defu2);

const defaults = {
  vuex: {
    namespace: "storage"
  },
  cookie: {
    prefix: "",
    options: {
      path: "/"
    }
  },
  localStorage: {
    prefix: ""
  },
  ignoreExceptions: false
};
const module$1 = (function module(moduleOptions) {
  const {nuxt} = this;
  const options = defu2__default['default'](moduleOptions, {...this.options.storage}, defaults);
  this.addPlugin({
    src: require.resolve("./runtime/plugin"),
    fileName: "storage.js",
    options
  });
  nuxt.options.alias["~storage"] = require.resolve("./runtime/storage");
  nuxt.options.build.transpile.push(__dirname, "@nuxtjs/universal-storage");
});

module.exports = module$1;
